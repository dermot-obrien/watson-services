group = 'org.dobrien.watson.services'
version = '1.0.0.rc-01'

buildscript {

  repositories {
    jcenter()
    mavenCentral()
  }
  
  dependencies {
    classpath('io.swagger:swagger-codegen:2.3.1')
  }
}

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'maven'
apply plugin: 'maven-publish'

dependencies {

    // Cognitive Search API and endpoints.
    compile 'io.swagger:swagger-jersey2-jaxrs:1.5.18'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'ch.qos.logback:logback-core:1.2.3'
    compile 'javax.servlet:servlet-api:2.5'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.26'
    compile 'org.glassfish.jersey.core:jersey-common:2.26'
    compile 'org.glassfish.jersey.inject:jersey-hk2:2.26'
    compile 'org.glassfish.jersey.media:jersey-media-multipart:2.26'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.9.4'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.9.4'
    compile 'com.brsanthu:migbase64:2.2'
    
    // Watson APIs and dependencies.
    compile 'com.ibm.watson.developer_cloud:java-sdk:6.3.1'  
    compile 'com.squareup.okhttp3:okhttp:3.10.0'
    compile 'com.squareup.okhttp3:okhttp-urlconnection:3.10.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.10.0'
   
    // JSON and utilities
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'org.json:json:20180130'

    // PDF.
    compile 'org.apache.pdfbox:pdfbox:2.0.1'
    compile 'org.apache.pdfbox:fontbox:2.0.0'
    compile 'org.apache.pdfbox:jempbox:1.8.11'
    compile 'org.apache.pdfbox:xmpbox:2.0.0'
    compile 'org.apache.pdfbox:preflight:2.0.0'
    compile 'org.apache.pdfbox:pdfbox-tools:2.0.0'
    compile 'org.bouncycastle:bcprov-jdk15on:1.59'
    compile 'org.bouncycastle:bcmail-jdk15on:1.59'
    compile 'org.bouncycastle:bcpkix-jdk15on:1.59'
    
    // Excel.
    compile 'org.apache.poi:poi:3.17'
    compile 'org.apache.poi:poi-ooxml:3.17'
    compile 'org.apache.poi:poi-scratchpad:3.17'
    
    // HTML and JSON processing.
    compile 'net.sourceforge.htmlunit:htmlunit:2.29'
    compile 'org.jsoup:jsoup:1.11.3'    
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
 
    // Test    
    testCompile 'junit:junit:4.12'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
   generated {
        java.srcDir "src/gen/java/"
    }
}

compileJava{
    source    += sourceSets.generated.java
}

import io.swagger.codegen.config.CodegenConfigurator
import io.swagger.codegen.DefaultGenerator
 
def swaggerSourceFile = 'src/main/webapp/watson-services-api.yaml'
def swaggerTargetFolder = 'src/gen/java'
 
task generateApi {
  doLast {
    def config = new CodegenConfigurator()
    config.setInputSpec("file:///$projectDir/$swaggerSourceFile")
    config.setOutputDir("$projectDir")
    config.setLang('jaxrs')
    config.setAdditionalProperties([
        'apiPackage'    : 'org.dobrien.watson.services.endpoints',
        'modelPackage'  : 'org.dobrien.watson.services.model',
        'sourceFolder'  : swaggerTargetFolder
    ])
    new DefaultGenerator().opts(config.toClientOptInput()).generate()
  }
}

test {
  useJUnit()
  testLogging.showStandardStreams = true
  beforeTest { descriptor ->
     logger.lifecycle("test: " + descriptor + "  Running")
  }

  onOutput { descriptor, event ->
     logger.lifecycle("test: " + descriptor + ": " + event.message )
  }
  afterTest { descriptor, result ->
    logger.lifecycle("test: " + descriptor + ": " + result )
  }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}